"""Create tables for companies and analytics

Revision ID: 58f3e0bd6fa6
Revises: deefe523fe2b
Create Date: 2025-09-20 13:11:49.292377

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import src.core.db.models


# revision identifiers, used by Alembic.
revision: str = '58f3e0bd6fa6'
down_revision: Union[str, Sequence[str], None] = 'deefe523fe2b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('brn', sa.String(length=100), nullable=False, comment='Stands for business registration number — a unique identifier assigned to a company by the government.'),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('score', sa.Float(precision=2, asdecimal=True), nullable=True, comment='Average financial rating across all analytical reports.'),
    sa.Column('created_at', src.core.db.models.UTCDateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False, comment='Is a «hidden» primary key here. Each table used in the public API should have an additional «exposed» unique key, which should preferably be natural (not surrogate) for usability.'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_companies')),
    sa.UniqueConstraint('brn', 'country', name=op.f('uq_companies_brn'))
    )
    op.create_table('analytics',
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False, comment='Is a «hidden» primary key here. Each table used in the public API should have an additional «exposed» unique key, which should preferably be natural (not surrogate) for usability.'),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_analytics_company_id_companies'), onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_analytics'))
    )
    op.create_table('companies_users',
    sa.Column('companies', sa.Integer(), nullable=False),
    sa.Column('users', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['companies'], ['companies.id'], name=op.f('fk_companies_users_companies_companies'), onupdate='RESTRICT', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['users'], ['users.id'], name=op.f('fk_companies_users_users_users'), onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('companies', 'users', name=op.f('pk_companies_users'))
    )
    op.create_table('ratios',
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('value', sa.Numeric(), nullable=False),
    sa.Column('deviation', sa.Enum('LOWER', 'UPPER', name='deviation'), nullable=True),
    sa.Column('analytics_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False, comment='Is a «hidden» primary key here. Each table used in the public API should have an additional «exposed» unique key, which should preferably be natural (not surrogate) for usability.'),
    sa.ForeignKeyConstraint(['analytics_id'], ['companies.id'], name=op.f('fk_ratios_analytics_id_companies'), onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ratios'))
    )
    op.alter_column('users', 'nickname',
               existing_type=sa.VARCHAR(length=30),
               comment='Lines longer than 30 characters are difficult to recognize.',
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=254),
               comment='See RFC 3696 for max length.',
               existing_nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               comment='Is a «hidden» primary key here. Each table used in the public API should have an additional «exposed» unique key, which should preferably be natural (not surrogate) for usability.',
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Is a «hidden» primary key here. Each table used in the public API should have an additional «exposed» unique key, which should preferably be natural (not surrogate) for usability.',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=254),
               comment=None,
               existing_comment='See RFC 3696 for max length.',
               existing_nullable=False)
    op.alter_column('users', 'nickname',
               existing_type=sa.VARCHAR(length=30),
               comment=None,
               existing_comment='Lines longer than 30 characters are difficult to recognize.',
               existing_nullable=False)
    op.drop_table('ratios')
    op.drop_table('companies_users')
    op.drop_table('analytics')
    op.drop_table('companies')
    # ### end Alembic commands ###

services:
    web:
        build: .
        container_name: ${WEB_HOST}
        ports:
            - ${WEB_PORT}:8000
        profiles:
            - dont-start

    web-prod:
        extends:
            service: web
        depends_on:
            db-prod:
                condition: service_healthy
        command:
            python -O -m uvicorn --factory src.main:main --host 0.0.0.0 --port 8000
            --workers ${WORKERS:-1} --log-level ${LOG_LEVEL:-trace}
        logging:
            driver: json-file
            options:
                max-size: ${LOG_SIZE:-10}m
                max-file: ${LOG_FILES:-3}
        profiles:
            - prod

    web-test:
        extends:
            service: web
        depends_on:
            db-dev-test:
                condition: service_healthy
        entrypoint: sh docker-entrypoint.sh
        command: pytest tests
        profiles:
            - test

    web-dev:
        extends:
            service: web
        depends_on:
            db-dev-test:
                condition: service_healthy
        entrypoint: sh docker-entrypoint.sh
        command: uvicorn --factory src.main:main --host 0.0.0.0 --port 8000
        develop:
            watch:
                - action: sync+restart
                  path: .
                  target: /app
                  ignore:
                      - pyproject.toml
                - action: rebuild
                  path: pyproject.toml
        volumes:
            - ./src/core/migrator/versions:/app/src/core/migrator/versions
        profiles:
            - dev

    db:
        image: postgres:17.5
        container_name: ${DB_HOST}
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        healthcheck:
            test: pg_isready -U ${DB_USER} -d ${DB_NAME}
            interval: 10s
            timeout: 5s
            retries: 3
        profiles:
            - dont-start

    db-prod:
        extends:
            service: db
        volumes:
            - data:/var/lib/postgresql/data
        logging:
            driver: json-file
            options:
                max-size: ${LOG_SIZE:-3}m
                max-file: ${LOG_FILES:-1}
        profiles:
            - prod

    db-dev-test:
        extends:
            service: db
        ports:
            - "5432:5432"
        profiles:
            - dev
            - test

volumes:
    data:
